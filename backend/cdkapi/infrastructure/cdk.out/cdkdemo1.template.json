{
 "Transform": "AWS::Serverless-2016-10-31",
 "AWSTemplateFormatVersion": "2010-09-09",
 "Resources": {
  "AppTable815C50BC": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdkdemo1/AppTable/Resource"
   }
  },
  "OrderTable416EB896": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdkdemo1/OrderTable/Resource"
   }
  },
  "MenuPriceAll6E92019B": {
   "Type": "AWS::DynamoDB::Table",
   "Properties": {
    "AttributeDefinitions": [
     {
      "AttributeName": "PK",
      "AttributeType": "S"
     },
     {
      "AttributeName": "SK",
      "AttributeType": "S"
     }
    ],
    "KeySchema": [
     {
      "AttributeName": "PK",
      "KeyType": "HASH"
     },
     {
      "AttributeName": "SK",
      "KeyType": "RANGE"
     }
    ],
    "ProvisionedThroughput": {
     "ReadCapacityUnits": 5,
     "WriteCapacityUnits": 5
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdkdemo1/MenuPriceAll/Resource"
   }
  },
  "DefaultRole": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Sid": "",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       },
       "Action": "sts:AssumeRole"
      }
     ]
    },
    "Policies": [
     {
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Resource": "arn:*:logs:*:*:*"
        }
       ]
      },
      "PolicyName": "DefaultRolePolicy"
     }
    ]
   }
  },
  "APIHandler": {
   "Type": "AWS::Serverless::Function",
   "Properties": {
    "CodeUri": {
     "Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "Key": "7434f4bed1e4511cb9e2f0f32181200c33a8537d02e5dd68aa506916a8346099.zip"
    },
    "Environment": {
     "Variables": {
      "APP_TABLE_NAME": {
       "Ref": "AppTable815C50BC"
      },
      "ORDER_TABLE_NAME": {
       "Ref": "OrderTable416EB896"
      },
      "MENU_TABLE_NAME": {
       "Ref": "MenuPriceAll6E92019B"
      }
     }
    },
    "Handler": "app.app",
    "MemorySize": 128,
    "Role": {
     "Fn::GetAtt": [
      "DefaultRole",
      "Arn"
     ]
    },
    "Runtime": "python3.10",
    "Tags": {
     "aws-chalice": "version=1.29.0:stage=cdkdemo1:app=cdkdemo1"
    },
    "Timeout": 60,
    "Tracing": "PassThrough"
   }
  },
  "RestAPI": {
   "Type": "AWS::Serverless::Api",
   "Properties": {
    "DefinitionBody": {
     "swagger": "2.0",
     "info": {
      "version": "1.0",
      "title": "cdkdemo1"
     },
     "schemes": [
      "https"
     ],
     "paths": {
      "/orders": {
       "post": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        }
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'*'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/orders/{orderid}": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        },
        "parameters": [
         {
          "name": "orderid",
          "in": "path",
          "required": true,
          "type": "string"
         }
        ]
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'*'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/orders/getprice": {
       "post": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        }
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'*'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      },
      "/menus": {
       "get": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200"
          }
         },
         "uri": {
          "Fn::Sub": "arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${APIHandler.Arn}/invocations"
         },
         "passthroughBehavior": "when_no_match",
         "httpMethod": "POST",
         "contentHandling": "CONVERT_TO_TEXT",
         "type": "aws_proxy"
        }
       },
       "options": {
        "consumes": [
         "application/json"
        ],
        "produces": [
         "application/json"
        ],
        "responses": {
         "200": {
          "description": "200 response",
          "schema": {
           "$ref": "#/definitions/Empty"
          },
          "headers": {
           "Access-Control-Allow-Methods": {
            "type": "string"
           },
           "Access-Control-Allow-Origin": {
            "type": "string"
           },
           "Access-Control-Allow-Headers": {
            "type": "string"
           }
          }
         }
        },
        "x-amazon-apigateway-integration": {
         "responses": {
          "default": {
           "statusCode": "200",
           "responseParameters": {
            "method.response.header.Access-Control-Allow-Methods": "'GET,OPTIONS'",
            "method.response.header.Access-Control-Allow-Origin": "'*'",
            "method.response.header.Access-Control-Allow-Headers": "'Authorization,Content-Type,X-Amz-Date,X-Amz-Security-Token,X-Api-Key'"
           }
          }
         },
         "requestTemplates": {
          "application/json": "{\"statusCode\": 200}"
         },
         "passthroughBehavior": "when_no_match",
         "type": "mock",
         "contentHandling": "CONVERT_TO_TEXT"
        }
       }
      }
     },
     "definitions": {
      "Empty": {
       "type": "object",
       "title": "Empty Schema"
      }
     },
     "x-amazon-apigateway-binary-media-types": [
      "application/octet-stream",
      "application/x-tar",
      "application/zip",
      "audio/basic",
      "audio/ogg",
      "audio/mp4",
      "audio/mpeg",
      "audio/wav",
      "audio/webm",
      "image/png",
      "image/jpg",
      "image/jpeg",
      "image/gif",
      "video/ogg",
      "video/mpeg",
      "video/webm"
     ]
    },
    "EndpointConfiguration": "EDGE",
    "StageName": "api"
   }
  },
  "APIHandlerInvokePermission": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Ref": "APIHandler"
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Sub": [
      "arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RestAPIId}/*",
      {
       "RestAPIId": {
        "Ref": "RestAPI"
       }
      }
     ]
    }
   }
  },
  "ChaliceAppDefaultRolePolicyCAAAC186": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AppTable815C50BC",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "OrderTable416EB896",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      },
      {
       "Action": [
        "dynamodb:BatchGetItem",
        "dynamodb:GetRecords",
        "dynamodb:GetShardIterator",
        "dynamodb:Query",
        "dynamodb:GetItem",
        "dynamodb:Scan",
        "dynamodb:ConditionCheckItem",
        "dynamodb:BatchWriteItem",
        "dynamodb:PutItem",
        "dynamodb:UpdateItem",
        "dynamodb:DeleteItem",
        "dynamodb:DescribeTable"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "MenuPriceAll6E92019B",
          "Arn"
         ]
        },
        {
         "Ref": "AWS::NoValue"
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ChaliceAppDefaultRolePolicyCAAAC186",
    "Roles": [
     {
      "Fn::Select": [
       1,
       {
        "Fn::Split": [
         "/",
         {
          "Fn::Select": [
           5,
           {
            "Fn::Split": [
             ":",
             {
              "Fn::GetAtt": [
               "DefaultRole",
               "Arn"
              ]
             }
            ]
           }
          ]
         }
        ]
       }
      ]
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdkdemo1/ChaliceApp/DefaultRole/Policy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02NwWrDMBBEvyX3zbauoffEUOgpwendrCU53VpaBa9EMMb/XmT30NMMzMybN6yqV6wO9NSjsePRc4/LLZEZgZ7aLXYWCtH2uHxR7x00g2xmBa07UnVJ8VQEtMZzNqNLZ1IHTAGXZpA2egfX6NnMZbu7FfQv/shiEkcp2enBK3gKvSUsVTcFVuUoK7ROY57Mdn/J6ZETbKe3RHeWOxgfsx3iFKjAOhbjs3WF8rnbMvwPaaJYThv7OqfvKC81VhW+H36U+ThlSRwctrv+AmghaiMkAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "cdkdemo1/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "AppTableName": {
   "Value": {
    "Ref": "AppTable815C50BC"
   }
  },
  "OrderTableName": {
   "Value": {
    "Ref": "OrderTable416EB896"
   }
  },
  "MenuTableName": {
   "Value": {
    "Ref": "MenuPriceAll6E92019B"
   }
  },
  "RestAPIId": {
   "Value": {
    "Ref": "RestAPI"
   }
  },
  "APIHandlerName": {
   "Value": {
    "Ref": "APIHandler"
   }
  },
  "APIHandlerArn": {
   "Value": {
    "Fn::GetAtt": [
     "APIHandler",
     "Arn"
    ]
   }
  },
  "EndpointURL": {
   "Value": {
    "Fn::Sub": "https://${RestAPI}.execute-api.${AWS::Region}.${AWS::URLSuffix}/api/"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}